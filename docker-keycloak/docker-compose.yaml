# docker-compose exec postgres psql -U keycloak
# update realm set ssl_required='NONE' where id = 'master';

# docker-compose exec keycloak ./keycloak/bin/jboss-cli.sh
# /socket-binding-group=standard-sockets/socket-binding=proxy-https\:add(port=443)
# RequestHeader set X-Forwarded-Proto "https"
# Header always set X-Frame-Options SAMEORIGIN
---
version: '2'
services:
  postgres:
    image: postgres:9.6
    expose:
      - "5432"
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
  keycloak:
    image: jboss/keycloak-postgres:3.2.1.Final
    links:
      - postgres
    environment:
      # only keep for first run- remove/comment out for hosting
      # KEYCLOAK_USER: admin
      # KEYCLOAK_PASSWORD: openidctest
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
      # Workaround for container using legacy Docker links, resulting in
      # "WFLYCTL0211: Cannot resolve expression 'jdbc:postgresql://${env.POSTGRES_PORT_5432_TCP_ADDR}...")n
      POSTGRES_PORT_5432_TCP_ADDR: postgres
    expose:
      - "8080"
      - "9090"
    # For local browser; you also need "keycloak" in your hosts file
    ports:
      - "8080:8080"
      - "9990:9990"
    # Uncomment the following and docker-compose up keycloak again to export realms
    # volumes:
      # - ./keycloak-setup/export:/export
    #entrypoint:
    #  - /opt/jboss/keycloak/bin/standalone.sh
    #  - -Dkeycloak.migration.action=export
    #  - -Dkeycloak.migration.provider=dir
    #  - -Dkeycloak.migration.dir=/export
